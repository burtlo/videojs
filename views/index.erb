<html>
  <head>
    <style>
      div {
        max-width: 800px;
        min-width: 400px;
      }
      video {
        width: 100%;
      }
      img {
        width: 307px; height: 250px;
      }
      canvas { width: 307px; height: 250px; }
    </style>
    <script src="/js/whammy.js"></script>
    <script src="/js/recorder.js"></script>
  </head>

  <body>

    <button id="start-recording" onclick="startRecording()">Record</button>
    <button id="stop-recording" onclick="stopRecording()">Stop</button>
    <button id="play-recording" onclick="play()">Play</button>

    <div><video autoplay></video></div>
    <canvas style="display:none;"></canvas>

    <script>
    navigator.getMedia = ( navigator.getUserMedia ||
                       navigator.webkitGetUserMedia ||
                       navigator.mozGetUserMedia ||
                       navigator.msGetUserMedia);

  var rafId;
  var frames = [];
  var video = document.querySelector('video');
  var canvas = document.querySelector('canvas');
  var ctx = canvas.getContext('2d');
  var localMediaStream = null;

  function drawVideoFrame(time) {
    rafId = requestAnimationFrame(drawVideoFrame);
    ctx.drawImage(video, 0, 0, 307, 200);
    console.log("Saving Frame");
    frames.push(canvas.toDataURL('image/webp', 1));
  };

  function snapshot() {
    if (localMediaStream) {
      var width = 300;
      var height = 207 * 1066 / 1596;
      // For some reason this will only take a corner (the video image needs to be resize)
      // ctx.drawImage(video, 0,0);
      ctx.drawImage(video, 0,0, width,height);
      document.querySelector('img').src = canvas.toDataURL('image/webp');
    }
  }

  var captureStreamSuccessful = function(stream) {
    rafId = requestAnimationFrame(drawVideoFrame);

    video.src = window.URL.createObjectURL(stream);
    localMediaStream = stream;

    var context = new webkitAudioContext();
    var mediaStreamSource = context.createMediaStreamSource(stream);
    recorder = new Recorder(mediaStreamSource);
    recorder.record();
  }

  function startRecording() {
    console.log("Staring To Record")
    navigator.getMedia({video: true, audio: true}, captureStreamSuccessful,function() {
      console.log("Failed")
    });
  }

  function stopRecording() {
    stopRecordingAudio();
    stopRecordingVideo();
    document.querySelector('div').removeChild(video);
  }

  function stopRecordingAudio() {
    console.log("Saving Audio");
    recorder.stop();

    var audio = document.createElement('audio');
    audio.setAttribute("controls");
    // audio.setAttribute("autoplay");
    document.body.appendChild(audio);

    recorder.exportWAV(function(stream) {
      audio.src = window.URL.createObjectURL(stream);
    });
  }

  function stopRecordingVideo() {
    console.log("Saving Video");

    cancelAnimationFrame(rafId);  // Note: not using vendor prefixes!
    // 2nd param: framerate for the video file.
    var webmBlob = Whammy.fromImageArray(frames, 1000 / 16);
    console.log("Creating Blob");

    var video = document.createElement('video');
    video.setAttribute("controls");
    // video.setAttribute("autoplay");
    video.src = window.URL.createObjectURL(webmBlob);

    document.body.appendChild(video);
  }

  function play() {
    var audio = document.querySelector('audio');
    var video = document.querySelector('video');
    audio.play();
    video.play();
    // audio.setAttribute("autoplay");
    // video.setAttribute("autoplay");
  }

 </script>
  </body>
</html>